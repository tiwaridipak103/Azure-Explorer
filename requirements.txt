import pymc as pm
import numpy as np
import pandas as pd

coords = {
    "submarkets": df['submarket_idx'].nunique(),
    "markets": df['market_idx'].nunique()
}

with pm.Model(coords=coords) as model:
    # Index data
    submarket_idx = pm.ConstantData("submarket_idx", df["submarket_idx"].values)
    market_idx = pm.ConstantData("market_idx", df["market_idx"].values)
    
    # Top-level prior (National)
    alpha_n = pm.Normal("alpha_n", mu=0, sigma=10)

    # Market-level effects
    sigma_m = pm.Exponential("sigma_m", 1.0)
    alpha_m = pm.Normal("alpha_m", mu=alpha_n, sigma=sigma_m, dims="markets")

    # Submarket-level effects
    sigma_s = pm.Exponential("sigma_s", 1.0)
    alpha_s = pm.Normal("alpha_s", mu=alpha_m[market_idx], sigma=sigma_s, dims="submarkets")

    # Final observed mean
    mu = alpha_s[submarket_idx]

    # Observation-level noise
    sigma = pm.Exponential("sigma", 1.0)
    y_obs = pm.Normal("y_obs", mu=mu, sigma=sigma, observed=df["vacancy"].values)

    # Sampling
    trace = pm.sample(1000, tune=1000, target_accept=0.9)