import numpy as np
import pandas as pd
from scipy.stats import ttest_ind, mannwhitneyu, ks_2samp, levene, shapiro

# Generate Sample Data
np.random.seed(42)
df1 = pd.DataFrame(np.random.normal(50, 10, (100, 20)), columns=[f"col_{i}" for i in range(20)])
df2 = pd.DataFrame(np.random.normal(50, 10, (100, 20)), columns=[f"col_{i}" for i in range(20)])

# Function to Perform Hypothesis Testing
def compare_dataframes(df1, df2, alpha=0.05):
    results = []

    for col in df1.columns:
        data1, data2 = df1[col], df2[col]

        # Normality Check (Shapiro-Wilk Test)
        norm1 = shapiro(data1).pvalue > alpha
        norm2 = shapiro(data2).pvalue > alpha

        # T-Test if normal, otherwise Mann-Whitney U Test
        if norm1 and norm2:
            test_stat, p_value_ttest = ttest_ind(data1, data2)
            test_used = "T-Test"
        else:
            test_stat, p_value_ttest = mannwhitneyu(data1, data2)
            test_used = "Mann-Whitney U"

        # Variance Test (Leveneâ€™s Test)
        _, p_value_levene = levene(data1, data2)

        # KS Test for Distribution Similarity
        _, p_value_ks = ks_2samp(data1, data2)

        # Store Results
        results.append({
            "Column": col,
            "Test Used": test_used,
            "T/Mann-Whitney P-Value": p_value_ttest,
            "Levene P-Value (Variance)": p_value_levene,
            "KS P-Value (Distribution)": p_value_ks,
            "Same Mean?": p_value_ttest > alpha,
            "Same Variance?": p_value_levene > alpha,
            "Same Distribution?": p_value_ks > alpha
        })

    return pd.DataFrame(results)

# Run the comparison
results_df = compare_dataframes(df1, df2)
print(results_df)