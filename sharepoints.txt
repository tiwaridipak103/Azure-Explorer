import pandas as pd
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Function to read the CSV file and convert it into an HTML table
def csv_to_html(file_path):
    df = pd.read_csv(file_path)
    return df.to_html(index=False)  # Convert DataFrame to HTML table (without index)

# Email sending function
def send_email(subject, body, to_email):
    # Set up email parameters
    from_email = "your_email@example.com"  # Replace with your email address
    password = "your_password"  # Replace with your email password or app-specific password

    # Create the email message
    msg = MIMEMultipart()
    msg['From'] = from_email
    msg['To'] = to_email
    msg['Subject'] = subject

    # Attach the body as HTML content
    msg.attach(MIMEText(body, 'html'))

    # Send the email using SMTP
    try:
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as server:  # Using Gmail's SMTP server
            server.login(from_email, password)
            server.sendmail(from_email, to_email, msg.as_string())
        print(f"Email sent to {to_email}")
    except Exception as e:
        print(f"Failed to send email: {e}")

# Main function to read CSV, convert to HTML, and send email
def main():
    csv_file_path = 'your_file.csv'  # Path to your CSV file
    to_email = "recipient@example.com"  # Replace with recipient's email address

    # Read CSV and convert to HTML
    html_table = csv_to_html(csv_file_path)

    # Define email subject and body
    subject = "CSV Records"
    body = f"<p>Here are the records from the CSV file:</p>{html_table}"

    # Send the email
    send_email(subject, body, to_email)

if __name__ == "__main__":
    main()
