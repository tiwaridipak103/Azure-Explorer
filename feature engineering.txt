import psutil
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import time
import os
from IPython.display import display, clear_output

def set_cpu_affinity(core_id):
    process = psutil.Process(os.getpid())
    process.cpu_affinity([core_id])

def update_plot():
    set_cpu_affinity(45)
    sns.set_style("darkgrid")
    plt.ion()
    fig, ax = plt.subplots(figsize=(25, 6))
    num_cores = psutil.cpu_count()
    bars = ax.bar(range(num_cores), [0] * num_cores, color='blue', alpha=0.7)
    ax.set_ylim(0, 110)
    ax.set_xlabel("CPU Core", fontsize=12)
    ax.set_ylabel("Usage (%)", fontsize=12)
    ax.set_title("Live CPU Usage per Core", fontsize=14, fontweight='bold', pad=50)
    ax.yaxis.grid(True, linestyle="-", alpha=0.7)
    text_labels = [ax.text(bar.get_x() + bar.get_width() / 2, 0, '', ha='center', va='bottom', fontsize=10, fontweight='bold') for bar in bars]

    while True:
        cpu_usage = psutil.cpu_percent(percpu=True)
        for bar, usage, text in zip(bars, cpu_usage, text_labels):
            bar.set_height(usage)
            if usage <= 40:
                bar.set_color("green")
            elif 40 < usage <= 80:
                bar.set_color("orange")
            else:
                bar.set_color("red")
            text.set_y(usage + 2)
            text.set_text(f"{usage:.1f}%")
        fig.canvas.draw()
        fig.canvas.flush_events()
        time.sleep(1)
        clear_output(wait=True)

plt.show()
update_plot()